
%%{init: {'theme':'forest'}}%%

sequenceDiagram

    Title Sequence diagram of .main() of /src/gtp/pipelines/process_attributions.py

    participant p1 as main()<br>:pipelines/process_attributions.py/process_attributions.py
    participant p2 as ProcessAttributionOptions<br>:options/base.py/BaseOptions
    participant p3 as <br>:configs/loaders.py/loaders.py
    participant p4 as <br>:pipelines/process_attributions.py/process_attributions.py
    participant p5 as <br>:dataloading/path_collectors.py/path_collectors.py
    participant p6 as <br>:dataloading/data_collectors.py/data_collectors.py
    participant p7 as <br>:evaluation.py/evaluation.py
    participant p8 as <br>:dataloading/tools.py/tools.py
    participant p9 as <br>:tools/simple.py/simple.py
    participant p10 as <br>:tools/timing.py/timing.py
    participant p11 as <br>:tools/calculation.py/calculation.py


	p1 ->>+ p2: 1: click_options()
	p2 -->>- p1: 1: return value
	p1 ->>+ p3: 2: load_configs(configs)
	p3 -->>- p1: 2: return value
	p1 ->>+ p4: 3: process_all_attributions(cfgs, opts)
	p4 ->>+ p4: 3.1: process_attributions(configs=configs, options=options)
	p4 ->>+ p4: 3.1.1: _process_genome(configs, options)
	p4 ->>+ p4: 3.1.1.1: _process_chromosome(configs, options, chromosome=chromosome)<br>
	p4 ->>+ p5: 3.1.1.1.1: get_experiment_directory( configs.io, species=options.<br>.species,        wing=options.wing,<br>,        color=options.color,<br>chromosome=options.chromosome,<br>,        exp_name=options.<br>exp_name,    )
	Note right of p5: Further calls ignored for reaching max depth
	p5 -->>- p4: 3.1.1.1.1: return value
	p4 ->>+ p6: 3.1.1.1.2: load_training_data(configs, options)
	Note right of p6: Further calls ignored for reaching max depth
	p6 -->>- p4: 3.1.1.1.2: return value
	p4 ->>+ p7: 3.1.1.1.3: get_lrp_attr( model, dloader,<br>,                    targets=targets,<br>,                    verbose=options.<br>.verbose,<br>num_processes=8,<br> )
	p7 -->>- p4: 3.1.1.1.3: return value
	p4 ->>+ p7: 3.1.1.1.4: get_perturb_attr( model, dloader, targets=targets,<br>, verbose=options.verbose<br> )
	p7 -->>- p4: 3.1.1.1.4: return value
	p4 ->>+ p7: 3.1.1.1.5: get_windowed_edit_attr( model, dloader,<br>,                    edits=edits,<br>,                    window=options.<br>.window_size,<br>verbose=options.verbose,<br>          )
	Note right of p7: Further calls ignored for reaching max depth
	p7 -->>- p4: 3.1.1.1.5: return value
	p4 ->>+ p4: 3.1.1.1.6: _get_evaluation_metrics(model, dloader)
	Note right of p4: Further calls ignored for reaching max depth
	p4 -->>- p4: 3.1.1.1.6: return value
	p4 ->>+ p8: 3.1.1.1.7: save_json(eval_stats, experiment_dir / f"{<br>phase_str}_metrics.json")
	p8 -->>- p4: 3.1.1.1.7: return value
	p4 -->>- p4: 3.1.1.1: return value
	p4 -->>- p4: 3.1.1: return value
	p4 ->>+ p4: 3.1.2: _process_chromosome(configs, options)
	p4 ->>+ p5: 3.1.2.1: get_experiment_directory( configs.io, species=options.<br>.species,        wing=options.wing,<br>,        color=options.color,<br>chromosome=options.chromosome,<br>,        exp_name=options.<br>exp_name,    )
	p5 ->>+ p5: 3.1.2.1.1: get_results_training_output_directory(io_cfgs)
	Note right of p5: Further calls ignored for reaching max depth
	p5 -->>- p5: 3.1.2.1.1: return value
	p5 ->>+ p9: 3.1.2.1.2: create_exp_info_text( species=species, wing=wing,<br>,        color=color,<br>chromosome=chromosome,    )
	p9 -->>- p5: 3.1.2.1.2: return value
	p5 -->>- p4: 3.1.2.1: return value
	p4 ->>+ p6: 3.1.2.2: load_training_data(configs, options)
	p6 ->>+ p10: 3.1.2.2.1: profile_exe_time(verbose=False)
	p10 -->>- p6: 3.1.2.2.1: return value
	p6 ->>+ p6: 3.1.2.2.2: load_chromosome_and_phenotype_data(configs, options)
	Note right of p6: Further calls ignored for reaching max depth
	p6 -->>- p6: 3.1.2.2.2: return value
	p6 ->>+ p5: 3.1.2.2.3: get_results_training_metadata_directory(configs.io)
	Note right of p5: Further calls ignored for reaching max depth
	p5 -->>- p6: 3.1.2.2.3: return value
	p6 ->>+ p8: 3.1.2.2.4: split_data_by_file( genotype_data_aligned,<br>phenotype_data_aligned,<br>camids_aligned, metadata_folder,<br>        options.species,    )
	p8 -->>- p6: 3.1.2.2.4: return value
	p6 -->>- p4: 3.1.2.2: return value
	p4 ->>+ p7: 3.1.2.3: get_lrp_attr( model, dloader,<br>,                    targets=targets,<br>,                    verbose=options.<br>.verbose,<br>num_processes=8,<br> )
	p7 -->>- p4: 3.1.2.3: return value
	p4 ->>+ p7: 3.1.2.4: get_perturb_attr( model, dloader, targets=targets,<br>, verbose=options.verbose<br> )
	p7 -->>- p4: 3.1.2.4: return value
	p4 ->>+ p7: 3.1.2.5: get_windowed_edit_attr( model, dloader,<br>,                    edits=edits,<br>,                    window=options.<br>.window_size,<br>verbose=options.verbose,<br>          )
	p7 ->>+ p7: 3.1.2.5.1: get_edit_loc(edit_num, chromosome_length)
	p7 -->>- p7: 3.1.2.5.1: return value
	p7 ->>+ p7: 3.1.2.5.2: get_edit_loc(edit_num, chromosome_length)
	p7 -->>- p7: 3.1.2.5.2: return value
	p7 -->>- p4: 3.1.2.5: return value
	p4 ->>+ p4: 3.1.2.6: _get_evaluation_metrics(model, dloader)
	p4 ->>+ p11: 3.1.2.6.1: gather_model_predictions_and_actuals(model, dataloader)
	p11 -->>- p4: 3.1.2.6.1: return value
	p4 -->>- p4: 3.1.2.6: return value
	p4 ->>+ p8: 3.1.2.7: save_json(eval_stats, experiment_dir / f"{<br>phase_str}_metrics.json")
	p8 -->>- p4: 3.1.2.7: return value
	p4 -->>- p4: 3.1.2: return value
	p4 -->>- p4: 3.1: return value
	p4 -->>- p1: 3: return value
	p1 ->>+ p4: 4: process_attributions(cfgs, opts)
	p4 ->>+ p4: 4.1: _process_genome(configs, options)
	p4 ->>+ p4: 4.1.1: _process_chromosome(configs, options, chromosome=chromosome)<br>
	p4 ->>+ p5: 4.1.1.1: get_experiment_directory( configs.io, species=options.<br>.species,        wing=options.wing,<br>,        color=options.color,<br>chromosome=options.chromosome,<br>,        exp_name=options.<br>exp_name,    )
	p5 ->>+ p5: 4.1.1.1.1: get_results_training_output_directory(io_cfgs)
	Note right of p5: Further calls ignored for reaching max depth
	p5 -->>- p5: 4.1.1.1.1: return value
	p5 ->>+ p9: 4.1.1.1.2: create_exp_info_text( species=species, wing=wing,<br>,        color=color,<br>chromosome=chromosome,    )
	p9 -->>- p5: 4.1.1.1.2: return value
	p5 -->>- p4: 4.1.1.1: return value
	p4 ->>+ p6: 4.1.1.2: load_training_data(configs, options)
	p6 ->>+ p10: 4.1.1.2.1: profile_exe_time(verbose=False)
	p10 -->>- p6: 4.1.1.2.1: return value
	p6 ->>+ p6: 4.1.1.2.2: load_chromosome_and_phenotype_data(configs, options)
	Note right of p6: Further calls ignored for reaching max depth
	p6 -->>- p6: 4.1.1.2.2: return value
	p6 ->>+ p5: 4.1.1.2.3: get_results_training_metadata_directory(configs.io)
	Note right of p5: Further calls ignored for reaching max depth
	p5 -->>- p6: 4.1.1.2.3: return value
	p6 ->>+ p8: 4.1.1.2.4: split_data_by_file( genotype_data_aligned,<br>phenotype_data_aligned,<br>camids_aligned, metadata_folder,<br>        options.species,    )
	p8 -->>- p6: 4.1.1.2.4: return value
	p6 -->>- p4: 4.1.1.2: return value
	p4 ->>+ p7: 4.1.1.3: get_lrp_attr( model, dloader,<br>,                    targets=targets,<br>,                    verbose=options.<br>.verbose,<br>num_processes=8,<br> )
	p7 -->>- p4: 4.1.1.3: return value
	p4 ->>+ p7: 4.1.1.4: get_perturb_attr( model, dloader, targets=targets,<br>, verbose=options.verbose<br> )
	p7 -->>- p4: 4.1.1.4: return value
	p4 ->>+ p7: 4.1.1.5: get_windowed_edit_attr( model, dloader,<br>,                    edits=edits,<br>,                    window=options.<br>.window_size,<br>verbose=options.verbose,<br>          )
	p7 ->>+ p7: 4.1.1.5.1: get_edit_loc(edit_num, chromosome_length)
	p7 -->>- p7: 4.1.1.5.1: return value
	p7 ->>+ p7: 4.1.1.5.2: get_edit_loc(edit_num, chromosome_length)
	p7 -->>- p7: 4.1.1.5.2: return value
	p7 -->>- p4: 4.1.1.5: return value
	p4 ->>+ p4: 4.1.1.6: _get_evaluation_metrics(model, dloader)
	p4 ->>+ p11: 4.1.1.6.1: gather_model_predictions_and_actuals(model, dataloader)
	p11 -->>- p4: 4.1.1.6.1: return value
	p4 -->>- p4: 4.1.1.6: return value
	p4 ->>+ p8: 4.1.1.7: save_json(eval_stats, experiment_dir / f"{<br>phase_str}_metrics.json")
	p8 -->>- p4: 4.1.1.7: return value
	p4 -->>- p4: 4.1.1: return value
	p4 -->>- p4: 4.1: return value
	p4 ->>+ p4: 4.2: _process_chromosome(configs, options)
	p4 ->>+ p5: 4.2.1: get_experiment_directory( configs.io, species=options.<br>.species,        wing=options.wing,<br>,        color=options.color,<br>chromosome=options.chromosome,<br>,        exp_name=options.<br>exp_name,    )
	p5 ->>+ p5: 4.2.1.1: get_results_training_output_directory(io_cfgs)
	p5 ->>+ p5: 4.2.1.1.1: _select_override_if_exists(io_cfgs.default_root, io_cfgs.<br>results.root)
	p5 -->>- p5: 4.2.1.1.1: return value
	p5 -->>- p5: 4.2.1.1: return value
	p5 ->>+ p9: 4.2.1.2: create_exp_info_text( species=species, wing=wing,<br>,        color=color,<br>chromosome=chromosome,    )
	p9 -->>- p5: 4.2.1.2: return value
	p5 -->>- p4: 4.2.1: return value
	p4 ->>+ p6: 4.2.2: load_training_data(configs, options)
	p6 ->>+ p10: 4.2.2.1: profile_exe_time(verbose=False)
	p10 -->>- p6: 4.2.2.1: return value
	p6 ->>+ p6: 4.2.2.2: load_chromosome_and_phenotype_data(configs, options)
	p6 ->>+ p5: 4.2.2.2.1: get_post_processed_genotype_directory(configs.io)
	Note right of p5: Further calls ignored for reaching max depth
	p5 -->>- p6: 4.2.2.2.1: return value
	p6 ->>+ p5: 4.2.2.2.2: get_post_processed_phenotype_directory(configs.io)
	Note right of p5: Further calls ignored for reaching max depth
	p5 -->>- p6: 4.2.2.2.2: return value
	p6 ->>+ p8: 4.2.2.2.3: load_chromosome_data( genotype_folder / configs.experiment.<br>.genotype_scope,<br>phenotype_folder, options.<br>.species,            options.wing,<br>,            options.color,<br>options.chromosome,<br>   )
	Note right of p8: Further calls ignored for reaching max depth
	p8 -->>- p6: 4.2.2.2.3: return value
	p6 -->>- p6: 4.2.2.2: return value
	p6 ->>+ p5: 4.2.2.3: get_results_training_metadata_directory(configs.io)
	p5 ->>+ p5: 4.2.2.3.1: _select_override_if_exists(io_cfgs.default_root, io_cfgs.<br>results.root)
	p5 -->>- p5: 4.2.2.3.1: return value
	p5 -->>- p6: 4.2.2.3: return value
	p6 ->>+ p8: 4.2.2.4: split_data_by_file( genotype_data_aligned,<br>phenotype_data_aligned,<br>camids_aligned, metadata_folder,<br>        options.species,    )
	p8 -->>- p6: 4.2.2.4: return value
	p6 -->>- p4: 4.2.2: return value
	p4 ->>+ p7: 4.2.3: get_lrp_attr( model, dloader,<br>,                    targets=targets,<br>,                    verbose=options.<br>.verbose,<br>num_processes=8,<br> )
	p7 -->>- p4: 4.2.3: return value
	p4 ->>+ p7: 4.2.4: get_perturb_attr( model, dloader, targets=targets,<br>, verbose=options.verbose<br> )
	p7 -->>- p4: 4.2.4: return value
	p4 ->>+ p7: 4.2.5: get_windowed_edit_attr( model, dloader,<br>,                    edits=edits,<br>,                    window=options.<br>.window_size,<br>verbose=options.verbose,<br>          )
	p7 ->>+ p7: 4.2.5.1: get_edit_loc(edit_num, chromosome_length)
	p7 -->>- p7: 4.2.5.1: return value
	p7 ->>+ p7: 4.2.5.2: get_edit_loc(edit_num, chromosome_length)
	p7 -->>- p7: 4.2.5.2: return value
	p7 -->>- p4: 4.2.5: return value
	p4 ->>+ p4: 4.2.6: _get_evaluation_metrics(model, dloader)
	p4 ->>+ p11: 4.2.6.1: gather_model_predictions_and_actuals(model, dataloader)
	p11 -->>- p4: 4.2.6.1: return value
	p4 -->>- p4: 4.2.6: return value
	p4 ->>+ p8: 4.2.7: save_json(eval_stats, experiment_dir / f"{<br>phase_str}_metrics.json")
	p8 -->>- p4: 4.2.7: return value
	p4 -->>- p4: 4.2: return value
	p4 -->>- p1: 4: return value
        